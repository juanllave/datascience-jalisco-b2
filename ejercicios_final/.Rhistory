knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gmodels)
library('C50')
options(scipen = 999)
dir1 <- '~/Documents/Repos/datascience-jalisco-b2'
setwd(dir1)
datos_e <- read_csv(paste(dir1, 'databases', 'e.csv', sep = '/'))
datos_v <- read_csv(paste(dir1, 'databases', 'v.csv', sep = '/'))
p1 <- datos_e %>%
filter(visitor = TRUE) %>%
group_by(branch_office) %>%
summarise(conexiones = n()) %>%
arrange(desc(conexiones))
g_p1 <- p1 %>%
ggplot(mapping = aes(x=reorder(branch_office, conexiones), conexiones))+
geom_col(colour = '#2cbba4', fill = '#2cbba4')+
coord_flip()+
labs(title = "Conexiones por sucursal",
caption = 'Fuente: base de datos de Klustera',
x = "Sucursal", y="Conexiones")+
geom_text(aes(label = conexiones),hjust = 1,  vjust= .5, color= "white", size = 3, fontface = 'bold')+
theme(plot.subtitle = element_text(size = rel(1.5)))+
theme_bw()
g_p1
p2 <- datos_e %>%
filter(visitor == 'TRUE') %>%
group_by(day_of_week_tz) %>%
summarise(visitantes = n())
g_p2 <- p2 %>%
ggplot(mapping = aes(x=reorder(day_of_week_tz, visitantes), visitantes))+
#ggplot(aes(x=day_of_week_tz, y=visitantes))+
geom_point(colour = '#227070', fill = '#227070', size = 4)+
geom_segment(aes(x=day_of_week_tz, xend=day_of_week_tz, y=0, yend=visitantes), color = '#227070', size=1)+
coord_flip()+
labs(title = "Visitantes por día de la semana",
caption ='Fuente: base de datos de Klustera',
x = "Día de la semana", y="Conexiones")+
geom_text(aes(label = visitantes),hjust = .5,  vjust= -1.5, size = 3, color='#227070')+
theme(plot.subtitle = element_text(size = rel(1.5)))+
theme_bw()
g_p2
p3 <- datos_e %>%
filter(visitor == 'TRUE')
p3 <- mean(p3$tiempodeses)
p3 <- round(p3, 2)
p4 <- datos_e %>%
filter(visitor == 'TRUE') %>%
group_by(month_tz) %>%
summarise(visitantes = n()) %>%
arrange(desc(visitantes))
g_p4 <- p4 %>%
ggplot(mapping = aes(x=reorder(month_tz, visitantes), visitantes))+
geom_col(colour = '#56D1D1', fill = '#56D1D1')+
coord_flip()+
labs(title = "Visitantes por mes",
caption ='Fuente: base de datos de Klustera',
x = "Mes", y="Visitantes")+
geom_text(aes(label = visitantes),hjust = 1,  vjust= .5, color= "white", size = 4, fontface = 'bold')+
theme(plot.subtitle = element_text(size = rel(1.5)))+
theme_bw()
g_p4
p5 <- datos_e %>%
filter(visitor == 'TRUE') %>%
group_by(hour_tz, day_of_week_tz) %>%
summarise(visitantes = n())
g_p5 <- p5 %>%
ggplot(aes(x=hour_tz, y=day_of_week_tz, fill=visitantes)) +
geom_tile(color="black") +
scale_fill_continuous(low="#ece2f0", high="#1c9099") +
labs(title="Visitantes según hora y día de la semana",
x="Hora", y="Día de la semana", fill="Visitantes") +
coord_fixed() +
theme_bw()
g_p5
datos_e <- read.csv(paste(dir1, 'databases', 'e.csv', sep = '/')) %>%
select(-1, -2, -6)
datos_v <- read.csv(paste(dir1, 'databases', 'v.csv', sep = '/')) %>%
select(-1, -2, -6)
datos_e$visitor <- factor(datos_e$visitor,
levels = c('true', 'false'),
labels = c('TRUE', 'FALSE'))
nfilas <- nrow(datos_e) * .80
set.seed(123)
index <- sample(1:nrow(datos_e), nfilas)
datos_e_train <- datos_e[index, -5]
datos_e_test <- datos_e[-index, -5]
datos_e_train_labels <- datos_e[index, 5]
datos_e_test_labels <- datos_e[-index, 5]
datos_e_model <- C5.0(datos_e_train, datos_e_train_labels)
datos_e_predict <- predict(datos_e_model, datos_e_test)
datos_e_boost50_model <- C5.0(datos_e_train, datos_e_train_labels, trials = 50)
datos_e_boost50_model
summary(datos_e_boost50_model)
datos_e_boost_pred50 <- predict(datos_e_boost50_model, datos_e_test)
datos_e_boost50_model <- C5.0(datos_e_train, datos_e_train_labels, trials = 50)
datos_e_boost50_model
datos_e_boost_pred50 <- predict(datos_e_boost50_model, datos_e_test)
datos_e_boost50_model <- C5.0(datos_e_train, datos_e_train_labels, trials = 50)
datos_e_boost50_model
datos_e_boost_pred50 <- predict(datos_e_boost50_model, datos_e_test)
CrossTable(datos_e_test_labels, datos_e_boost_pred50,
prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
dnn = c('actual', 'predicción'))
round(prop.table(table(datos_e$visitor))*100, digits = 1)
datos_e$visitor <- factor(datos_e$visitor,
levels = c('true', 'false'),
labels = c('Visitor', 'No Visitor'))
round(prop.table(table(datos_e$visitor))*100, digits = 1)
round(prop.table(table(datos_e$visitor))*100, digits = 1)
datos_e$visitor <- factor(datos_e$visitor,
levels = c('true', 'false'),
labels = c('TRUE', 'FALSE'))
round(prop.table(table(datos_e$visitor))*100, digits = 1)
datos_e <- read.csv(paste(dir1, 'databases', 'e.csv', sep = '/')) %>%
select(-1, -2, -6)
datos_v <- read.csv(paste(dir1, 'databases', 'v.csv', sep = '/')) %>%
select(-1, -2, -6)
datos_e$visitor <- factor(datos_e$visitor,
levels = c('true', 'false'),
labels = c('TRUE', 'FALSE'))
round(prop.table(table(datos_e$visitor))*100, digits = 1)
porcentaje_visitor <- round(prop.table(table(datos_e$visitor))*100, digits = 1)
porcentaje_visitor
porcentaje_visitor <- round(prop.table(table(datos_e$visitor))*100, digits = 1)
datos_v_boost_pred50 <- predict(datos_e_boost50_model, datos_v)
datos_v <- datos_v %>%
mutate(prediccion = datos_v_boost_pred50)
